include "adverse-events-core.conf"
#include "substances-core.conf"

# need to reconsider this a bit
substanceAPI.BaseUrl="http://localhost:8080/" 

server.port=8086
ix.home="ginas.ix"

spring.application.name="adverse-events"

#this is what it registers under eureka
eureka.instance.hostname="adverse-events"


##################################################################
# SPRING BOOT ACTUATOR SETTINGS FOR MICROSERVICE HEALTH CHECKS  ##
##################################################################
# turn off rabbit mq check for now since we don't use it otherwise it wil say we ar down
management.health.rabbit.enabled: false

# PUT YOUR PERSONAL EXTENSIONS AND ADDITIONS HERE
#debug=true
spring.main.allow-bean-definition-overriding=true

#turn off eureka for now
eureka.client.enabled=false

ix.h2 {
        base = ./${ix.home}/h2
      }

##################################################################
# DATABASE CONNECTION                                           ##
##################################################################

# H2 Database Connection
spring.datasource.url="jdbc:h2:file:../substances/ginas.ix/h2/sprinxight;MODE=Oracle;AUTO_SERVER=TRUE"
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Should be "none" when not testing locally with H2
spring.jpa.hibernate.ddl-auto=update

adverseevent.datasource.url="jdbc:h2:"${ix.h2.base}"/appinxight;MODE=Oracle;AUTO_SERVER=TRUE"
adverseevent.datasource.driverClassName=org.h2.Driver
adverseevent.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Should be "none" when not testing locally with H2
adverseevent.jpa.hibernate.ddl-auto=update

# !!!!! IMPORTANT, KEEP TO "none" for non-memory databases such as ORACLE, MYSQL, etc.
# Otherwise all the tables can be dropped or deleted
# Uncomment when NOT testing locally
# spring.jpa.hibernate.ddl-auto=none
# adverseevent.jpa.hibernate.ddl-auto=none

##################################################################
# CONFIGURATIONS VALIDATORS, PROCESSORS, EXPORT, etc            ##
##################################################################

gsrs.entityProcessors = [
    {
        "entityClassName" = "gov.hhs.gsrs.adverseevents.adverseeventpt.models.AdverseEventPt",
		"processor" = "gov.hhs.gsrs.adverseevents.adverseeventpt.processors.AdverseEventPtProcessor"
    },
    {
        "entityClassName" = "gov.hhs.gsrs.adverseevents.adverseeventdme.models.AdverseEventDme",
		"processor" = "gov.hhs.gsrs.adverseevents.adverseeventdme.processors.AdverseEventDmeProcessor"
    },
    {
        "entityClassName" = "gov.hhs.gsrs.adverseevents.adverseeventcvm.models.AdverseEventCvm",
        "processor" = "gov.hhs.gsrs.adverseevents.adverseeventcvm.processors.AdverseEventCvmProcessor"
    }
]

ix.ginas.export.factories.adverseeventpt = [
    "gov.hhs.gsrs.adverseevents.adverseeventpt.exporters.AdverseEventPtExporterFactory"
]

ix.ginas.export.factories.adverseeventdme = [
    "gov.hhs.gsrs.adverseevents.adverseeventdme.exporters.AdverseEventDmeExporterFactory"
]

ix.ginas.export.factories.adverseeventcvm = [
    "gov.hhs.gsrs.adverseevents.adverseeventcvm.exporters.AdverseEventCvmExporterFactory"
]

gsrs.indexers.list=[
    {
        "indexer" = "gov.hhs.gsrs.adverseevents.indexers.ATCIndexValueMaker",
        "class" = "ix.ginas.models.v1.Substance"
    },
    {
         "indexer" = "gov.hhs.gsrs.adverseevents.indexers.AEATCIndexValueMaker",
         "class" = "gov.hhs.gsrs.adverseevents.adverseeventdme.models.AdverseEventPt"
    },
    {
         "indexer" = "gov.hhs.gsrs.adverseevents.indexers.AEATCIndexValueMaker",
         "class" = "gov.hhs.gsrs.adverseevents.adverseeventdme.models.AdverseEventDme"
    },
    {
         "indexer" = "gov.hhs.gsrs.adverseevents.indexers.AEATCIndexValueMaker",
         "class" = "gov.hhs.gsrs.adverseevents.adverseeventdme.models.AdverseEventCvm"
    }
]

# Secure session off for dev, but if using HTTPS it's better to have it on
gsrs.sessionSecure=false
